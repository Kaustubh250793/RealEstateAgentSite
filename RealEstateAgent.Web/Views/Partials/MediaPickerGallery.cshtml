@inherits Umbraco.Web.Mvc.UmbracoViewPage<int>

@{
    var content = UmbracoContext.Content.GetByContentType(UmbracoContext.Content.GetContentType("properties"));

    var property = content.FirstOrDefault().Children.Where(x => x.Id == Model);
}
<!DOCTYPE html>
<head>
    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="css/basicSlider.css">
</head>
<html>

<body>
    @{
        var children = property.FirstOrDefault().Value<IEnumerable<IPublishedContent>>("propertyImages");

        foreach (IPublishedContent item in children)
        {
            <div class="mySlides fade">
                <img src="@item.Url()" style="width:70%">
            </div>
        }

        <a class="prev" onclick="plusSlides(-1)">&#10094;</a>
        <a class="next" onclick="plusSlides(1)">&#10095;</a>
    }
    <br>

    <div style="text-align:center">
        <span class="dot" onclick="currentSlide(1)"></span>
        <span class="dot" onclick="currentSlide(2)"></span>
        <span class="dot" onclick="currentSlide(3)"></span>
    </div>

    <script>
        var slideIndex = 1;
        showSlides(slideIndex);

        function plusSlides(n) {
            showSlides(slideIndex += n);
        }

        function currentSlide(n) {
            showSlides(slideIndex = n);
        }

        function showSlides(n) {
            var i;
            var slides = document.getElementsByClassName("mySlides");
            var dots = document.getElementsByClassName("dot");
            if (n > slides.length) { slideIndex = 1 }
            if (n < 1) { slideIndex = slides.length }
            for (i = 0; i < slides.length; i++) {
                slides[i].style.display = "none";
            }
            for (i = 0; i < dots.length; i++) {
                dots[i].className = dots[i].className.replace(" active", "");
            }
            slides[slideIndex - 1].style.display = "block";
            dots[slideIndex - 1].className += " active";
        }
    </script>
</body>
</html>
