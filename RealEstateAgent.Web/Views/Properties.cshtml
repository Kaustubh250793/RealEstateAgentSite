@using System.Linq
@using RealEstateAgent.Web.Models

@inherits Umbraco.Web.Mvc.UmbracoViewPage<PropertiesContentModel>
@{
    Layout = "Master.cshtml";
}

<div class="all-title-box">
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <h2>Properties</h2>
                <!-- Breadcrumbs -->
                <nav id="breadcrumbs">
                    <ul>
                        <li><a href="#">Home</a></li>
                        <li>Properties</li>
                    </ul>
                </nav>
            </div>
        </div>
    </div>
</div>

<div id="features" class="section wb">
    <div class="container">
        <div class="section-title row text-center">
            <div class="col-md-8 col-md-offset-2">
                <small>All Awesome Property Details</small>
                <h3>Property Details</h3>
                <p class="lead">Quisque eget nisl id nulla sagittis auctor quis id. Aliquam quis vehicula enim, non aliquam risus. Sed a tellus quis mi rhoncus dignissim.</p>
            </div><!-- end col -->
        </div><!-- end title -->

        <hr class="invis">

        <div class="row">

            @Html.Partial("SearchForm", Model.PropertiesFilterViewModel)

            <br />
            <br />
            <br />
            <br />

             @*@Html.Partial("AsyncFilter", Model.PropertiesFilterViewModel)*@


            @foreach (var property in Model.Properties)
            {
                <div class="col-md-4 col-sm-6 col-xs-12">
                    <div class="service-widget">
                        <div class="property-main">
                            <div class="property-wrap">
                                <figure class="post-media wow fadeIn">
                                    @{
                                        var propertyImages = property.PropertyImages;

                                        IEnumerable<MediaWithCrops> children = new List<MediaWithCrops>();

                                        if (propertyImages != null)
                                        {
                                            children = propertyImages.Where(x => x.ContentType.Alias.ToLower() == "image").ToList();
                                        }

                                        string imagePath = string.Empty;
                                        imagePath = propertyImages != null ? children.FirstOrDefault().Url() : Path.GetFullPath("/uploads/NoImages.png");
                                    }
                                    <a href="@Url.SurfaceAction("MediaPickerGallery", "PropertiesSurface", new { propId = property.Id })" class="hoverbutton global-radius"><i class="flaticon-unlink"></i></a>
                                    <img src=@imagePath alt="" class="img-responsive">
                                    <div class="label-inner">
                                        <span class="label-status label">Popular</span>
                                    </div>
                                    <div class="price">
                                        <span class="item-sub-price">$@property.PropertyPrice</span>
                                    </div>
                                </figure>
                                <div class="item-body">
                                    <h3>@property.PropertyName</h3>
                                    <div class="info">
                                        <div class="info">
                                            <p><span>Bedroom: @property.NumberOfBedrooms</span> <span>Bathroom: @property.NumberOfBathrooms</span> <span>Land Size: <span class="estate-x-size">@property.PropertySize m2</span></span>
                                            <p>House</p>
                                        </div>
                                    </div>
                                    <div class="adderess">
                                        <i class="fa fa-map-pin" aria-hidden="true"></i>
                                        @property.PropertyAddress
                                    </div>
                                </div>
                            </div>
                            <div class="item-foot">
                                <div class="pull-left">
                                    <span class="prop-user-agent">
                                        <i class="fa fa-user" aria-hidden="true"></i>
                                        @property.PropertyOwner
                                    </span>
                                </div>
                                <div class="pull-right">
                                    <span class="prop-date">
                                        <i class="fa fa-calendar" aria-hidden="true"></i>
                                        @property.LastPosted months ago
                                    </span>
                                </div>
                            </div>
                        </div>
                    </div><!-- end service -->
                </div>
            }
        </div><!-- end row -->
    </div><!-- end container -->
</div><!-- end section -->
